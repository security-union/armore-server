// automatically generated by the FlatBuffers compiler, do not modify

import { flatbuffers } from "flatbuffers";
/**
 * @enum {number}
 */
export namespace garage {
    export enum CommandType {
        Lock = 0,
        ToggleGarageDoor = 1,
    }
}

/**
 * @constructor
 */
export namespace garage {
    export class Command {
        bb: flatbuffers.ByteBuffer | undefined = undefined;

        bb_pos: number = 0;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Command
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Command {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }

        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Command= obj
         * @returns Command
         */
        static getRootAsCommand(bb: flatbuffers.ByteBuffer, obj?: Command): Command {
            return (obj || new Command()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }

        /**
         * @returns garage.CommandType
         */
        type(): garage.CommandType {
            const offset = this.bb!.__offset(this.bb_pos, 4);
            return offset
                ? /**  */ this.bb!.readInt8(this.bb_pos + offset)
                : garage.CommandType.Lock;
        }

        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|undefined
         */
        correlationId(): string | undefined;
        correlationId(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | undefined;
        correlationId(optionalEncoding?: any): string | Uint8Array | undefined {
            const offset = this.bb!.__offset(this.bb_pos, 6);
            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : undefined;
        }

        /**
         * @param flatbuffers.Builder builder
         */
        static startCommand(builder: flatbuffers.Builder) {
            builder.startObject(2);
        }

        /**
         * @param flatbuffers.Builder builder
         * @param garage.CommandType type
         */
        static addType(builder: flatbuffers.Builder, type: garage.CommandType) {
            builder.addFieldInt8(0, type, garage.CommandType.Lock);
        }

        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset correlationIdOffset
         */
        static addCorrelationId(
            builder: flatbuffers.Builder,
            correlationIdOffset: flatbuffers.Offset,
        ) {
            builder.addFieldOffset(1, correlationIdOffset, 0);
        }

        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endCommand(builder: flatbuffers.Builder): flatbuffers.Offset {
            const offset = builder.endObject();
            return offset;
        }

        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset offset
         */
        static finishCommandBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {
            builder.finish(offset);
        }

        static createCommand(
            builder: flatbuffers.Builder,
            type: garage.CommandType,
            correlationIdOffset: flatbuffers.Offset,
        ): flatbuffers.Offset {
            Command.startCommand(builder);
            Command.addType(builder, type);
            Command.addCorrelationId(builder, correlationIdOffset);
            return Command.endCommand(builder);
        }
    }
}
