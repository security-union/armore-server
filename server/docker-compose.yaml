version: "3"
services:
    # Services
    auth_server:
        command: yarn start
        build:
            context: .
            cache_from:
                - node:12.2.0-alpine
        ports:
            - 10000
        depends_on:
            - rabbit
            - postgres
            - redis
        environment:
            SERVICE_NAME: auth_server
            AUTH_SERVER: 10000
            RABBITMQ_USER: rabbitmq
            RABBITMQ_PASS: rabbitmq
            RABBIT_MQ_HOST: rabbit
            RABBITMQ_VHOST: staging
            PG_USER: "postgres"
            PG_PASS: "docker"
            PG_HOST: "postgres"
            PG_PORT: 5432
            PG_DB: "armore"
            CS_TYPE: local-development
            CS_CREDENTIALS_FILE: /app/credentials.json
            CS_BUCKET: rescuelink_user_pictures
            CS_PROJECT: iot-garage-242501

    http_gateway:
        command: yarn start
        build:
            context: .
            cache_from:
                - node:12.2.0-alpine
        ports:
            - 8081
        depends_on:
            - rabbit
            - postgres
            - redis
        environment:
            NODE_LOG_LEVEL: debug
            SERVICE_NAME: http_gateway
            RABBITMQ_USER: rabbitmq
            RABBITMQ_PASS: rabbitmq
            RABBIT_MQ_HOST: rabbit
            RABBITMQ_VHOST: staging
            PG_USER: "postgres"
            PG_PASS: "docker"
            PG_HOST: "postgres"
            PG_PORT: 5432
            PG_DB: "armore"
            REDIS_HOST: "redis"
            REDIS_PORT: 6379
            CS_TYPE: local-development
            CS_CREDENTIALS_FILE: /app/credentials.json
            CS_BUCKET: rescuelink_user_pictures
            CS_PROJECT: iot-garage-242501

    notification_server:
        command: yarn start
        build:
            context: .
            cache_from:
                - node:12.2.0-alpine
        env_file: .env
        ports:
            - 9999
        depends_on:
            - rabbit
            - postgres
            - redis
        environment:
            SERVICE_NAME: notification_server
            RABBITMQ_USER: rabbitmq
            RABBITMQ_PASS: rabbitmq
            RABBIT_MQ_HOST: rabbit
            RABBITMQ_VHOST: staging
            PG_USER: "postgres"
            PG_PASS: "docker"
            PG_HOST: "postgres"
            PG_PORT: 5432
            PG_DB: "armore"
            REDIS_HOST: "redis"
            REDIS_PORT: 6379
            CS_TYPE: local-development
            CS_CREDENTIALS_FILE: /app/credentials.json
            CS_BUCKET: rescuelink_user_pictures
            CS_PROJECT: iot-garage-242501
            SENDGRID_API_KEY: test
            TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
            TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
            TWILIO_NUMBER: ${TWILIO_NUMBER}

    ws_gateway:
        command: yarn start
        build:
            context: .
            cache_from:
                - node:12.2.0-alpine
        ports:
            - 9080
        depends_on:
            - rabbit
            - redis
        environment:
            NODE_LOG_LEVEL: debug
            SERVICE_NAME: ws_gateway
            RABBITMQ_USER: rabbitmq
            RABBITMQ_PASS: rabbitmq
            RABBIT_MQ_HOST: rabbit
            RABBITMQ_VHOST: staging
            PG_USER: "postgres"
            PG_PASS: "docker"
            PG_HOST: "postgres"
            PG_PORT: 5432
            PG_DB: "rescuelink"
            REDIS_HOST: "redis"
            REDIS_PORT: 6379
        # volumes:
        #     - ./src:/app/src

    # geofence:
    #     command: cargo watch -x 'run'
    #     build:
    #         context: ../geofence
    #         cache_from:
    #             - securityunion/rust-dev:latest

    #     depends_on:
    #         - rabbit
    #         - postgres
    #         - redis

    #     environment:
    #         RUST_LOG: "info"
    #         RABBITMQ_USER: rabbitmq
    #         RABBITMQ_PASS: rabbitmq
    #         RABBITMQ_HOST: "rabbit"
    #         RABBITMQ_VHOST: "staging"
    #         PG_USER: "postgres"
    #         PG_PASS: "docker"
    #         PG_HOST: "postgres"
    #         PG_PORT: 5432
    #         PG_DB: "rescuelink"

    http_gateway_v1:
        command: cargo watch -x 'run --bin http_gateway'
        build:
            context: ../server_rust
            cache_from:
                - securityunion/rust-dev:latest
        ports:
            - 10001
        depends_on:
            - rabbit
            - postgres
            - redis
        environment:
            RUST_LOG: "debug"
            RABBITMQ_USER: rabbitmq
            RABBITMQ_PASS: rabbitmq
            RABBITMQ_HOST: "rabbit"
            RABBITMQ_VHOST: "staging"
            PG_USER: "postgres"
            PG_PASS: "docker"
            PG_HOST: "postgres"
            PG_PORT: 5432
            PG_DB: "rescuelink"
            REDIS_URL: "redis://redis"
            ROCKET_ENV: "dev"
            RUST_BACKTRACE: 1

    invitations_v1:
        command: cargo watch -x 'run --bin invitations'
        build:
            context: ../server_rust
            cache_from:
                - securityunion/rust-dev:latest
        ports:
            - "10002:10001"
        depends_on:
            - rabbit
            - postgres
            - redis
        environment:
            RUST_LOG: "debug"
            RABBITMQ_USER: rabbitmq
            RABBITMQ_PASS: rabbitmq
            RABBITMQ_HOST: "rabbit"
            RABBITMQ_VHOST: "staging"
            PG_USER: "postgres"
            PG_PASS: "docker"
            PG_HOST: "postgres"
            PG_PORT: 5432
            PG_DB: "rescuelink"
            REDIS_URL: "redis://redis"
            ROCKET_ENV: "dev"
            RUST_BACKTRACE: 1

    nanny:
        command: cargo watch -x 'run --bin nanny'
        build:
            context: ../server_rust
            cache_from:
                - securityunion/rust-dev:latest
        depends_on:
            - rabbit
            - postgres
            - redis
        environment:
            RUST_LOG: "debug"
            RABBITMQ_USER: rabbitmq
            RABBITMQ_PASS: rabbitmq
            RABBITMQ_HOST: "rabbit"
            RABBITMQ_VHOST: "staging"
            PG_USER: "postgres"
            PG_PASS: "docker"
            PG_HOST: "postgres"
            PG_PORT: 5432
            PG_DB: "rescuelink"
            REDIS_URL: "redis://redis"
            ROCKET_ENV: "dev"
            RUST_BACKTRACE: 1

    device_simulator:
        build:
            context: ../device_simulator
            cache_from:
                - python:3

    # Middleware
    dbmate:
        build:
            context: ../dbmate
            cache_from:
                - amacneil/dbmate
        environment:
            DATABASE_URL: "postgres://postgres:docker@postgres:5432/rescuelink?sslmode=disable"
        depends_on:
            - postgres

    postgres:
        image: postgres:12
        environment:
            POSTGRES_PASSWORD: "docker"
            PGPASSWORD: "docker"
        ports:
            - 5432

    rabbit:
        image: "gcr.io/iot-garage-242501/rabbit-mq@sha256:2e7c520476f0b828cb5c02b28242385b0e0df5c9618acc7a75030938a9287cfe"
        environment:
            RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
            RABBITMQ_DEFAULT_USER: "rabbitmq"
            RABBITMQ_DEFAULT_PASS: "rabbitmq"
            RABBITMQ_DEFAULT_VHOST: "/staging"
            RABBITMQ_DEFAULT_PASS_HASH: "O2Llvy0pvBeNz//pfqQWlWA6rAf7TbW6rkYfF1y3QEje3tba"
        ports:
            - 15672
            - 5672

    redis:
        image: redis:alpine
        ports:
            - 6379

    swagger-editor:
        image: swaggerapi/swagger-editor
        ports:
            - "8082:8080"
